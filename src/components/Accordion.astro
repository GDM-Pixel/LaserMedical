---
// Accordion.astro
const { items, extraClass = "" } = Astro.props;
---
<div class={`accordion-wrapper ${extraClass}`}>
  {
   //@ts-ignore
  items.map((item, index) => (
     //@ts-ignore
    <div key={index}>
      <button class={`accordion flex justify-between ${item.isopen ? 'active' : ''}`}>
        {item.title}
        <svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M12.0002 24.2344C18.6284 24.2344 24.0002 18.8625 24.0002 12.2344C24.0002 5.60625 18.6284 0.234375 12.0002 0.234375C5.37212 0.234375 0.000244141 5.60625 0.000244141 12.2344C0.000244141 18.8625 5.37212 24.2344 12.0002 24.2344ZM10.8752 16.3594V13.3594H7.87524C7.25181 13.3594 6.75024 12.8578 6.75024 12.2344C6.75024 11.6109 7.25181 11.1094 7.87524 11.1094H10.8752V8.10938C10.8752 7.48594 11.3768 6.98438 12.0002 6.98438C12.6237 6.98438 13.1252 7.48594 13.1252 8.10938V11.1094H16.1252C16.7487 11.1094 17.2502 11.6109 17.2502 12.2344C17.2502 12.8578 16.7487 13.3594 16.1252 13.3594H13.1252V16.3594C13.1252 16.9828 12.6237 17.4844 12.0002 17.4844C11.3768 17.4844 10.8752 16.9828 10.8752 16.3594Z"/>
</svg>
      </button>
      <div class="panel" data-isopen={item.isopen ? 'true' : 'false'}>
        <div class="accordion-content" set:html={item.answer}></div>
      </div>
    </div>
  ))}
</div>

<script>
  function initAccordion() {
  
    const allAccordionsGroups = document.querySelectorAll('.accordion-wrapper');

    allAccordionsGroups.forEach((wrapper) => {
      const accordions = wrapper.querySelectorAll('.accordion');
      const panels = wrapper.querySelectorAll('.panel');

      accordions.forEach((accordionButton, index) => {
        const panel = panels[index];
        const isopen = panel.getAttribute('data-isopen') === 'true';

        // Initialiser le max-height pour les éléments ouverts par défaut
        if (isopen) {
          accordionButton.classList.add('active');
          //@ts-ignore
          panel.style.maxHeight = panel.scrollHeight + "px";
        }

        accordionButton.addEventListener('click', () => {
          const isActive = accordionButton.classList.contains('active');

          // Fermer les autres panneaux dans le même groupe
          accordions.forEach((otherAccordion, idx) => {
            const otherPanel = panels[idx];
            if (otherAccordion !== accordionButton) {
              otherAccordion.classList.remove('active');
               //@ts-ignore
              otherPanel.style.maxHeight = null;
            }
          });

          // Basculer le panneau actuel
          if (!isActive) {
            accordionButton.classList.add('active');
             //@ts-ignore
            panel.style.maxHeight = panel.scrollHeight + "px";
          } else {
            accordionButton.classList.remove('active');
             //@ts-ignore
            panel.style.maxHeight = null;
          }
        });
      });
    });
  }
document.addEventListener('astro:content-ready', initAccordion);
document.addEventListener('astro:page-load', initAccordion);

  
</script>

<style lang="scss">
  /* Style de l'accordéon avec effet de glissement */
  .accordion {
    background-color: #171717;
    color: white;
	  font-weight:bold;
    cursor: pointer;
    padding: 18px;
    width: 100%;
    text-align: left;
    outline: none;
    font-size: 18px;
    transition: 0.4s;
  }

  .accordion svg {
	@apply fill-brown-500 transition-all duration-500 ease-in-out rotate-0}
	.accordion.active svg {
	@apply fill-brown-200 transition-all duration-500 ease-in-out rotate-45}

  .active {
    background-color: #323232;
	color:white;
  }
  .accordion:hover{
    background-color: #505050;
	color:white;
  }

.clearaccordion {@apply shadow-lg;
  .accordion.active {background-color: #323232;@apply text-white;}
  .accordion:hover {background-color: #505050;}
  .accordion {@apply bg-white text-black border-t border-grey-400 border-solid;}
  &>div:first-child button {@apply border-t-0;}
    }

  .panel {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.2s ease-out;
    background-color: white;
    color:black;
  }

  .accordion-content {
	padding: 18px;
	background-color: white;
  }
</style>